{"version":3,"sources":["api/fetches.js","redux/actions.js","redux/reducers.js","redux/store.js","components/ContactForm/ContactForm .jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["BASE_URL","getContactsFetch","a","fetch","then","response","json","removeContactsFetch","id","method","body","JSON","stringify","data","addContactFetch","contact","headers","filterContacts","createAction","value","payload","getContactsFromServer","createAsyncThunk","contacts","removeContactsFromServer","newContact","addContactToServer","upgradedContact","contactReducer","createReducer","fulfilled","state","loadingReducer","pending","rejected","filterReducer","reducers","combineReducers","store","configureStore","reducer","ContactForm","handleChange","handleAddContact","className","onChange","type","name","pattern","title","required","onClick","Filter","ContactList","filter","deleteContact","isLoading","useSelector","filterValue","map","item","phone","toLowerCase","includes","App","useState","setName","number","setNumber","dispatch","useDispatch","useEffect","evt","target","find","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAAMA,EAAW,uDAEV,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACkBC,MAAMH,GAAUI,MAAK,SAACC,GAC3C,OAAOA,EAASC,UAFb,cACCD,EADD,yBAKEA,GALF,4C,sBAQA,SAAeE,EAAtB,kC,4CAAO,WAAmCC,GAAnC,eAAAN,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,YAAgBQ,GAAM,CAChDC,OAAQ,SACRC,KAAMC,KAAKC,UAAUJ,KAEpBJ,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACS,GACL,OAAOA,KATN,cACCR,EADD,yBAYEA,GAZF,4C,sBAeA,SAAeS,EAAtB,kC,4CAAO,WAA+BC,GAA/B,eAAAb,EAAA,sEACkBC,MAAM,GAAD,OAAIH,GAAY,CAC1CS,OAAQ,OACRC,KAAMC,KAAKC,UAAUG,GACrBC,QAAS,CACP,eAAgB,qCAGjBZ,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACS,GACL,OAAOA,KAZN,cACCR,EADD,yBAeEA,GAfF,4C,sBClBA,I,IAAMY,EAAiBC,YAAa,oBAAoB,SAACC,GAC9D,MAAO,CAAEC,QAASD,MAGPE,EAAwBC,YACnC,eADmD,sBAEnD,4BAAApB,EAAA,6DACQqB,EAAWtB,IADnB,kBAESsB,GAFT,4CAMWC,EAA2BF,YACtC,kBADsD,uCAEtD,WAAOd,GAAP,eAAAN,EAAA,sEACQK,EAAoBC,GAD5B,uBAG2BP,IAH3B,cAGQwB,EAHR,yBAISA,GAJT,2CAFsD,uDAU3CC,EAAqBJ,YAChC,cADgD,uCAEhD,WAAOP,GAAP,eAAAb,EAAA,sEACQY,EAAgBC,GADxB,uBAGgCd,IAHhC,cAGQ0B,EAHR,yBAISA,GAJT,2CAFgD,uDCpB5CC,EAAiBC,YAAc,IAAD,mBACjCR,EAAsBS,WAAY,SAACC,EAAD,OAAUX,EAAV,EAAUA,QAAV,4BAC9BW,GAD8B,CAEjCX,OAHgC,cAKjCI,EAAyBM,WAAY,SAACC,EAAD,SAAwB,CAAxB,EAAUX,YALd,cASjCM,EAAmBI,WAAY,SAACC,EAAD,SAAwB,CAAxB,EAAUX,YATR,IAY9BY,EAAiBH,aAAc,GAAD,mBACjCR,EAAsBY,SAAU,kBAAM,KADL,cAEjCZ,EAAsBS,WAAY,kBAAM,KAFP,cAGjCT,EAAsBa,UAAW,kBAAM,KAHN,cAIjCV,EAAyBS,SAAU,kBAAM,KAJR,cAKjCT,EAAyBM,WAAY,kBAAM,KALV,cAMjCN,EAAyBU,UAAW,kBAAM,KANT,IAS9BC,EAAgBN,YAAc,GAAD,eAChCZ,GAAiB,SAACc,EAAD,GAChB,OADwC,EAAdX,YAKjBgB,EAAWC,YAAgB,CACtCT,iBACAO,gBACAH,mBCpCWM,EAAQC,YAAe,CAAEC,QAASJ,I,+BCAhC,SAASK,EAAT,GAA0D,IAAnCC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,iBAClD,OACE,sBAAKC,UAAU,cAAf,UACE,qCACA,uBACEC,SAAUH,EACVI,KAAK,OACLC,KAAK,OACLC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAEV,sCACA,uBAAOJ,KAAK,MAAMC,KAAK,MAAMF,SAAUH,IAEvC,wBAAQI,KAAK,SAASF,UAAU,aAAaO,QAASR,EAAtD,4BChBS,SAASS,EAAT,GAAqC,IAAnBnC,EAAkB,EAAlBA,eAC/B,OACE,gCACE,sDACA,uBAAO6B,KAAK,OAAOD,SAAU5B,O,MCFpB,SAASoC,EAAT,GAAiD,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cACtCC,EAAYC,aAAY,SAACnB,GAC7B,OAAOA,EAAMN,kBAETT,EAAWkC,aAAY,SAACnB,GAC5B,OAAOA,EAAMV,kBAET8B,EAAcD,aAAY,SAACnB,GAC/B,OAAOA,EAAMH,iBAGf,OACE,qBAAKS,UAAU,WAAf,SACE,qBAAIA,UAAU,iBAAd,WACIY,GACW,KAAXF,GACA/B,EAAS,GAAGoC,KAAI,SAACC,GACf,OACE,yCACMA,EAAKb,KADX,aACoBa,EAAKC,OACvB,wBACEV,QAASI,EACT/C,GAAIoD,EAAKpD,GACTsC,KAAK,SACLF,UAAU,qBAJZ,sBAFOgB,EAAKpD,QAalBgD,GACgB,KAAhBE,GACAnC,EAAS,GACN+B,QAAO,SAACM,GACP,OAAOA,EAAKb,KACTe,cACAC,SAASL,EAAYI,kBAEzBH,KAAI,SAACC,GACJ,OACE,yCACMA,EAAKb,KADX,aACoBa,EAAKC,OACvB,wBACEV,QAASI,EACTT,KAAK,SACLF,UAAU,qBAHZ,oBAMU,MARHgB,EAAKpD,YCjCf,SAASwD,IACtB,MAAwBC,qBAAxB,mBAAOlB,EAAP,KAAamB,EAAb,KACA,EAA4BD,qBAA5B,mBAAOE,EAAP,KAAeC,EAAf,KACMC,EAAWC,cAEX/C,EAAWkC,aAAY,SAACnB,GAC5B,OAAOA,EAAMV,kBAGT0B,EAASG,aAAY,SAACnB,GAC1B,OAAOA,EAAMH,iBA+Cf,OAJAoC,qBAAU,WACRF,EAAShD,OACR,CAACgD,IAGF,sBAAKzB,UAAU,YAAf,UACE,2CACA,cAAC,EAAD,CACEF,aAhDN,SAAsB8B,GACpB,OAAQA,EAAIC,OAAO1B,MACjB,IAAK,OACHmB,EAAQM,EAAIC,OAAOtD,OACnB,MAEF,IAAK,MACHiD,EAAUI,EAAIC,OAAOtD,SA0CrBwB,iBAlCN,WAEIpB,EAAS,GAAGmD,MAAK,SAAC3D,GAChB,OAAOA,EAAQgC,OAASA,KAG1B4B,MAAM,GAAD,OAAI5B,EAAJ,4BAMLsB,EAAS3C,EAJU,CACjBqB,KAAMA,EACNc,MAAOM,QA2BT,0CACA,cAACf,EAAD,CAAQnC,eAtBZ,SAAkBuD,GAChBH,EAASpD,EAAeuD,EAAIC,OAAOtD,WAsBjC,cAAC,EAAD,CAAamC,OAAQA,EAAQC,cAnBjC,SAAuBiB,GACrB,IAAMhE,EAAKgE,EAAIC,OAAOjE,GACtB6D,EAAS7C,EAAyBhB,UCvDtCoE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUxC,MAAOA,EAAjB,SACE,cAAC0B,EAAD,QAGJe,SAASC,eAAe,W","file":"static/js/main.92ffbb33.chunk.js","sourcesContent":["const BASE_URL = \"https://61b2044cc8d4640017aaf12a.mockapi.io/contacts\";\r\n\r\nexport async function getContactsFetch() {\r\n  const response = await fetch(BASE_URL).then((response) => {\r\n    return response.json();\r\n  });\r\n\r\n  return response;\r\n}\r\n\r\nexport async function removeContactsFetch(id) {\r\n  const response = await fetch(`${BASE_URL}/${id}`, {\r\n    method: \"DELETE\",\r\n    body: JSON.stringify(id),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n\r\n  return response;\r\n}\r\n\r\nexport async function addContactFetch(contact) {\r\n  const response = await fetch(`${BASE_URL}`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(contact),\r\n    headers: {\r\n      \"Content-Type\": \"application/json; charset=UTF-8\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    });\r\n\r\n  return response;\r\n}\r\n","import { createAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {\n  getContactsFetch,\n  removeContactsFetch,\n  addContactFetch,\n} from \"../api/fetches\";\n\nexport const filterContacts = createAction(\"phonebook/filter\", (value) => {\n  return { payload: value };\n});\n\nexport const getContactsFromServer = createAsyncThunk(\n  \"contacts/get\",\n  async () => {\n    const contacts = getContactsFetch();\n    return contacts;\n  }\n);\n\nexport const removeContactsFromServer = createAsyncThunk(\n  \"contacts/delete\",\n  async (id) => {\n    await removeContactsFetch(id);\n\n    const newContact = await getContactsFetch();\n    return newContact;\n  }\n);\n\nexport const addContactToServer = createAsyncThunk(\n  \"contact/add\",\n  async (contact) => {\n    await addContactFetch(contact);\n\n    const upgradedContact = await getContactsFetch();\n    return upgradedContact;\n  }\n);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  filterContacts,\n  addContactToServer,\n  getContactsFromServer,\n  removeContactsFromServer,\n} from \"./actions\";\n\nconst contactReducer = createReducer([], {\n  [getContactsFromServer.fulfilled]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [removeContactsFromServer.fulfilled]: (state, { payload }) => [\n    (state = payload),\n  ],\n\n  [addContactToServer.fulfilled]: (state, { payload }) => [(state = payload)],\n});\n\nconst loadingReducer = createReducer(true, {\n  [getContactsFromServer.pending]: () => true,\n  [getContactsFromServer.fulfilled]: () => false,\n  [getContactsFromServer.rejected]: () => false,\n  [removeContactsFromServer.pending]: () => true,\n  [removeContactsFromServer.fulfilled]: () => false,\n  [removeContactsFromServer.rejected]: () => false,\n});\n\nconst filterReducer = createReducer(\"\", {\n  [filterContacts]: (state, { payload }) => {\n    return (state = payload);\n  },\n});\n\nexport const reducers = combineReducers({\n  contactReducer,\n  filterReducer,\n  loadingReducer,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { reducers } from \"./reducers\";\n\nexport const store = configureStore({ reducer: reducers });\n","import React from \"react\";\nimport styles from \"./ContactForm.css\";\n\nexport default function ContactForm({ handleChange, handleAddContact }) {\n  return (\n    <div className=\"input__area\">\n      <p>Name</p>\n      <input\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <p>Phone</p>\n      <input type=\"tel\" name=\"tel\" onChange={handleChange} />\n\n      <button type=\"button\" className=\"input__btn\" onClick={handleAddContact}>\n        Add contact\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Filter({ filterContacts }) {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input type=\"text\" onChange={filterContacts} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./ContactList.css\";\n\nexport default function ContactList({ filter, deleteContact }) {\n  const isLoading = useSelector((store) => {\n    return store.loadingReducer;\n  });\n  const contacts = useSelector((store) => {\n    return store.contactReducer;\n  });\n  const filterValue = useSelector((store) => {\n    return store.filterReducer;\n  });\n\n  return (\n    <div className=\"contacts\">\n      <ul className=\"contacts__list\">\n        {!isLoading &&\n          filter === \"\" &&\n          contacts[0].map((item) => {\n            return (\n              <li key={item.id}>\n                {`${item.name}: ${item.phone}`}\n                <button\n                  onClick={deleteContact}\n                  id={item.id}\n                  type=\"button\"\n                  className=\"contacts__list_btn\"\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        {!isLoading &&\n          filterValue !== \"\" &&\n          contacts[0]\n            .filter((item) => {\n              return item.name\n                .toLowerCase()\n                .includes(filterValue.toLowerCase());\n            })\n            .map((item) => {\n              return (\n                <li key={item.id}>\n                  {`${item.name}: ${item.phone}`}\n                  <button\n                    onClick={deleteContact}\n                    type=\"button\"\n                    className=\"contacts__list_btn\"\n                  >\n                    Delete\n                  </button>{\" \"}\n                </li>\n              );\n            })}\n      </ul>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm/ContactForm \";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport {\n  getContactsFromServer,\n  filterContacts,\n  removeContactsFromServer,\n  addContactToServer,\n} from \"./redux/actions\";\n\nexport default function App() {\n  const [name, setName] = useState();\n  const [number, setNumber] = useState();\n  const dispatch = useDispatch();\n\n  const contacts = useSelector((store) => {\n    return store.contactReducer;\n  });\n\n  const filter = useSelector((store) => {\n    return store.filterReducer;\n  });\n\n  function handleChange(evt) {\n    switch (evt.target.name) {\n      case \"name\":\n        setName(evt.target.value);\n        break;\n\n      case \"tel\":\n        setNumber(evt.target.value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleAddContact() {\n    if (\n      contacts[0].find((contact) => {\n        return contact.name === name;\n      })\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        name: name,\n        phone: number,\n      };\n      dispatch(addContactToServer(newContact));\n    }\n  }\n\n  function filterer(evt) {\n    dispatch(filterContacts(evt.target.value));\n  }\n\n  function removeContact(evt) {\n    const id = evt.target.id;\n    dispatch(removeContactsFromServer(id));\n  }\n\n  useEffect(() => {\n    dispatch(getContactsFromServer());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm\n        handleChange={handleChange}\n        handleAddContact={handleAddContact}\n      />\n\n      <h2>Contacts</h2>\n      <Filter filterContacts={filterer} />\n      <ContactList filter={filter} deleteContact={removeContact} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}