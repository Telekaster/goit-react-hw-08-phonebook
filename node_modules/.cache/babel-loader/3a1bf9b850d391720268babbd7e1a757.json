{"ast":null,"code":"import { createAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { registerFetch, loginFetch, refreshFetch, logoutFetch, getContactsFetch, removeContactsFetch, addContactFetch } from \"../api/fetches\";\nexport const register = createAsyncThunk(\"auth/register\", async data => {\n  const user = await registerFetch(data);\n  localStorage.setItem(\"auth\", user.token);\n  return user;\n});\nexport const loginAction = createAsyncThunk(\"auth/login\", async data => {\n  const user = await loginFetch(data);\n  localStorage.setItem(\"auth\", user.token);\n  return user;\n});\nexport const refreshUserAction = createAsyncThunk(\"auth/refresh\", async data => {\n  const user = await refreshFetch(data);\n  return user;\n});\nexport const logoutAction = createAsyncThunk(\"auth/logout\", async data => {\n  await logoutFetch(data);\n  localStorage.removeItem(\"auth\");\n  window.location.reload();\n});\nexport const getContactsFromServer = createAsyncThunk(\"contacts/get\", async data => {\n  const contacts = await getContactsFetch(data);\n  return contacts;\n});\nexport const addContactToServer = createAsyncThunk(\"contact/add\", async (data, contact) => {\n  await addContactFetch(data, contact);\n  const upgradedContact = await getContactsFetch(data);\n  return upgradedContact;\n});\nexport const removeContactsFromServer = createAsyncThunk(\"contacts/delete\", async id => {\n  await removeContactsFetch(id);\n  const newContact = await getContactsFetch();\n  return newContact;\n});\nexport const filterContacts = createAction(\"phonebook/filter\", value => {\n  return {\n    payload: value\n  };\n});","map":{"version":3,"sources":["C:/Projects/Go-it/goit-react-hw-08-phonebook/src/redux/actions.js"],"names":["createAction","createAsyncThunk","registerFetch","loginFetch","refreshFetch","logoutFetch","getContactsFetch","removeContactsFetch","addContactFetch","register","data","user","localStorage","setItem","token","loginAction","refreshUserAction","logoutAction","removeItem","window","location","reload","getContactsFromServer","contacts","addContactToServer","contact","upgradedContact","removeContactsFromServer","id","newContact","filterContacts","value","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,kBAA/C;AACA,SACEC,aADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,gBALF,EAMEC,mBANF,EAOEC,eAPF,QAQO,gBARP;AAUA,OAAO,MAAMC,QAAQ,GAAGR,gBAAgB,CAAC,eAAD,EAAkB,MAAOS,IAAP,IAAgB;AACxE,QAAMC,IAAI,GAAG,MAAMT,aAAa,CAACQ,IAAD,CAAhC;AACAE,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACG,KAAlC;AACA,SAAOH,IAAP;AACD,CAJuC,CAAjC;AAMP,OAAO,MAAMI,WAAW,GAAGd,gBAAgB,CAAC,YAAD,EAAe,MAAOS,IAAP,IAAgB;AACxE,QAAMC,IAAI,GAAG,MAAMR,UAAU,CAACO,IAAD,CAA7B;AACAE,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACG,KAAlC;AACA,SAAOH,IAAP;AACD,CAJ0C,CAApC;AAMP,OAAO,MAAMK,iBAAiB,GAAGf,gBAAgB,CAC/C,cAD+C,EAE/C,MAAOS,IAAP,IAAgB;AACd,QAAMC,IAAI,GAAG,MAAMP,YAAY,CAACM,IAAD,CAA/B;AACA,SAAOC,IAAP;AACD,CAL8C,CAA1C;AAQP,OAAO,MAAMM,YAAY,GAAGhB,gBAAgB,CAAC,aAAD,EAAgB,MAAOS,IAAP,IAAgB;AAC1E,QAAML,WAAW,CAACK,IAAD,CAAjB;AACAE,EAAAA,YAAY,CAACM,UAAb,CAAwB,MAAxB;AACAC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,CAJ2C,CAArC;AAMP,OAAO,MAAMC,qBAAqB,GAAGrB,gBAAgB,CACnD,cADmD,EAEnD,MAAOS,IAAP,IAAgB;AACd,QAAMa,QAAQ,GAAG,MAAMjB,gBAAgB,CAACI,IAAD,CAAvC;AACA,SAAOa,QAAP;AACD,CALkD,CAA9C;AAQP,OAAO,MAAMC,kBAAkB,GAAGvB,gBAAgB,CAChD,aADgD,EAEhD,OAAOS,IAAP,EAAae,OAAb,KAAyB;AACvB,QAAMjB,eAAe,CAACE,IAAD,EAAOe,OAAP,CAArB;AAEA,QAAMC,eAAe,GAAG,MAAMpB,gBAAgB,CAACI,IAAD,CAA9C;AACA,SAAOgB,eAAP;AACD,CAP+C,CAA3C;AAUP,OAAO,MAAMC,wBAAwB,GAAG1B,gBAAgB,CACtD,iBADsD,EAEtD,MAAO2B,EAAP,IAAc;AACZ,QAAMrB,mBAAmB,CAACqB,EAAD,CAAzB;AAEA,QAAMC,UAAU,GAAG,MAAMvB,gBAAgB,EAAzC;AACA,SAAOuB,UAAP;AACD,CAPqD,CAAjD;AAUP,OAAO,MAAMC,cAAc,GAAG9B,YAAY,CAAC,kBAAD,EAAsB+B,KAAD,IAAW;AACxE,SAAO;AAAEC,IAAAA,OAAO,EAAED;AAAX,GAAP;AACD,CAFyC,CAAnC","sourcesContent":["import { createAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {\n  registerFetch,\n  loginFetch,\n  refreshFetch,\n  logoutFetch,\n  getContactsFetch,\n  removeContactsFetch,\n  addContactFetch,\n} from \"../api/fetches\";\n\nexport const register = createAsyncThunk(\"auth/register\", async (data) => {\n  const user = await registerFetch(data);\n  localStorage.setItem(\"auth\", user.token);\n  return user;\n});\n\nexport const loginAction = createAsyncThunk(\"auth/login\", async (data) => {\n  const user = await loginFetch(data);\n  localStorage.setItem(\"auth\", user.token);\n  return user;\n});\n\nexport const refreshUserAction = createAsyncThunk(\n  \"auth/refresh\",\n  async (data) => {\n    const user = await refreshFetch(data);\n    return user;\n  }\n);\n\nexport const logoutAction = createAsyncThunk(\"auth/logout\", async (data) => {\n  await logoutFetch(data);\n  localStorage.removeItem(\"auth\");\n  window.location.reload();\n});\n\nexport const getContactsFromServer = createAsyncThunk(\n  \"contacts/get\",\n  async (data) => {\n    const contacts = await getContactsFetch(data);\n    return contacts;\n  }\n);\n\nexport const addContactToServer = createAsyncThunk(\n  \"contact/add\",\n  async (data, contact) => {\n    await addContactFetch(data, contact);\n\n    const upgradedContact = await getContactsFetch(data);\n    return upgradedContact;\n  }\n);\n\nexport const removeContactsFromServer = createAsyncThunk(\n  \"contacts/delete\",\n  async (id) => {\n    await removeContactsFetch(id);\n\n    const newContact = await getContactsFetch();\n    return newContact;\n  }\n);\n\nexport const filterContacts = createAction(\"phonebook/filter\", (value) => {\n  return { payload: value };\n});\n"]},"metadata":{},"sourceType":"module"}