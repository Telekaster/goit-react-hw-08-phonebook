{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { filterContacts, addContactToServer, getContactsFromServer, removeContactsFromServer } from \"./actions\";\nconst contactReducer = createReducer([], {\n  [getContactsFromServer.fulfilled]: (state, _ref) => {\n    let {\n      payload\n    } = _ref;\n    return [...state, payload];\n  },\n  [removeContactsFromServer.fulfilled]: (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    return [state = payload];\n  },\n  [addContactToServer.fulfilled]: (state, _ref3) => {\n    let {\n      payload\n    } = _ref3;\n    return [state = payload];\n  }\n});\nconst loadingReducer = createReducer(true, {\n  [getContactsFromServer.pending]: () => true,\n  [getContactsFromServer.fulfilled]: () => false,\n  [getContactsFromServer.rejected]: () => false,\n  [removeContactsFromServer.pending]: () => true,\n  [removeContactsFromServer.fulfilled]: () => false,\n  [removeContactsFromServer.rejected]: () => false\n});\nconst filterReducer = createReducer(\"\", {\n  [filterContacts]: (state, _ref4) => {\n    let {\n      payload\n    } = _ref4;\n    return state = payload;\n  }\n});\nexport const reducers = combineReducers({\n  contactReducer,\n  filterReducer,\n  loadingReducer\n});","map":{"version":3,"sources":["C:/Projects/Go-it/goit-react-hw-08-phonebook/src/redux/reducers.js"],"names":["combineReducers","createReducer","filterContacts","addContactToServer","getContactsFromServer","removeContactsFromServer","contactReducer","fulfilled","state","payload","loadingReducer","pending","rejected","filterReducer","reducers"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SACEC,cADF,EAEEC,kBAFF,EAGEC,qBAHF,EAIEC,wBAJF,QAKO,WALP;AAOA,MAAMC,cAAc,GAAGL,aAAa,CAAC,EAAD,EAAK;AACvC,GAACG,qBAAqB,CAACG,SAAvB,GAAmC,CAACC,KAAD;AAAA,QAAQ;AAAEC,MAAAA;AAAF,KAAR;AAAA,WAAwB,CACzD,GAAGD,KADsD,EAEzDC,OAFyD,CAAxB;AAAA,GADI;AAKvC,GAACJ,wBAAwB,CAACE,SAA1B,GAAsC,CAACC,KAAD;AAAA,QAAQ;AAAEC,MAAAA;AAAF,KAAR;AAAA,WAAwB,CAC3DD,KAAK,GAAGC,OADmD,CAAxB;AAAA,GALC;AASvC,GAACN,kBAAkB,CAACI,SAApB,GAAgC,CAACC,KAAD;AAAA,QAAQ;AAAEC,MAAAA;AAAF,KAAR;AAAA,WAAwB,CAAED,KAAK,GAAGC,OAAV,CAAxB;AAAA;AATO,CAAL,CAApC;AAYA,MAAMC,cAAc,GAAGT,aAAa,CAAC,IAAD,EAAO;AACzC,GAACG,qBAAqB,CAACO,OAAvB,GAAiC,MAAM,IADE;AAEzC,GAACP,qBAAqB,CAACG,SAAvB,GAAmC,MAAM,KAFA;AAGzC,GAACH,qBAAqB,CAACQ,QAAvB,GAAkC,MAAM,KAHC;AAIzC,GAACP,wBAAwB,CAACM,OAA1B,GAAoC,MAAM,IAJD;AAKzC,GAACN,wBAAwB,CAACE,SAA1B,GAAsC,MAAM,KALH;AAMzC,GAACF,wBAAwB,CAACO,QAA1B,GAAqC,MAAM;AANF,CAAP,CAApC;AASA,MAAMC,aAAa,GAAGZ,aAAa,CAAC,EAAD,EAAK;AACtC,GAACC,cAAD,GAAkB,CAACM,KAAD,YAAwB;AAAA,QAAhB;AAAEC,MAAAA;AAAF,KAAgB;AACxC,WAAQD,KAAK,GAAGC,OAAhB;AACD;AAHqC,CAAL,CAAnC;AAMA,OAAO,MAAMK,QAAQ,GAAGd,eAAe,CAAC;AACtCM,EAAAA,cADsC;AAEtCO,EAAAA,aAFsC;AAGtCH,EAAAA;AAHsC,CAAD,CAAhC","sourcesContent":["import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  filterContacts,\n  addContactToServer,\n  getContactsFromServer,\n  removeContactsFromServer,\n} from \"./actions\";\n\nconst contactReducer = createReducer([], {\n  [getContactsFromServer.fulfilled]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [removeContactsFromServer.fulfilled]: (state, { payload }) => [\n    (state = payload),\n  ],\n\n  [addContactToServer.fulfilled]: (state, { payload }) => [(state = payload)],\n});\n\nconst loadingReducer = createReducer(true, {\n  [getContactsFromServer.pending]: () => true,\n  [getContactsFromServer.fulfilled]: () => false,\n  [getContactsFromServer.rejected]: () => false,\n  [removeContactsFromServer.pending]: () => true,\n  [removeContactsFromServer.fulfilled]: () => false,\n  [removeContactsFromServer.rejected]: () => false,\n});\n\nconst filterReducer = createReducer(\"\", {\n  [filterContacts]: (state, { payload }) => {\n    return (state = payload);\n  },\n});\n\nexport const reducers = combineReducers({\n  contactReducer,\n  filterReducer,\n  loadingReducer,\n});\n"]},"metadata":{},"sourceType":"module"}