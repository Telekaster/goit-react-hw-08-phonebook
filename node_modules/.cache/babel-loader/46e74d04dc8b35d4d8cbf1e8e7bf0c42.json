{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Go-it\\\\goit-react-hw-08-phonebook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport Header from \"./views/Header/HeaderView\";\nimport LoginView from \"./views/LoginView/LoginView\";\nimport RegisterView from \"./views/RegisterView/RegisterView\";\nimport HomeView from \"./views/HomeView/HomeView\";\nimport { getContactsFromServer, filterContacts, removeContactsFromServer, addContactToServer, refreshUserAction } from \"./redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(store => {\n    return store.userReducer;\n  });\n  const contacts = useSelector(store => {\n    return store.contactReducer;\n  });\n  const filter = useSelector(store => {\n    return store.filterReducer;\n  });\n  const navigate = useNavigate();\n\n  function handleAddContact() {\n    if (contacts[0].find(contact => {\n      return contact.name === name;\n    })) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        name: name,\n        phone: number\n      };\n      dispatch(addContactToServer(newContact));\n    }\n  }\n\n  function filterer(evt) {\n    dispatch(filterContacts(evt.target.value));\n  }\n\n  function removeContact(evt) {\n    const id = evt.target.id;\n    dispatch(removeContactsFromServer(id));\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\")) {\n      dispatch(refreshUserAction(localStorage.getItem(\"auth\")));\n    }\n\n    dispatch(getContactsFromServer(localStorage.getItem(\"auth\")));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"goit-react-hw-07-phonebook/\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(HomeView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"goit-react-hw-07-phonebook/login\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(LoginView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"goit-react-hw-07-phonebook/register\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(RegisterView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"uDiGcxEIMOJS0MR3cxxD5bycMAU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useNavigate];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Projects/Go-it/goit-react-hw-08-phonebook/src/App.js"],"names":["useDispatch","useSelector","Route","Routes","useNavigate","useEffect","Header","LoginView","RegisterView","HomeView","getContactsFromServer","filterContacts","removeContactsFromServer","addContactToServer","refreshUserAction","App","dispatch","user","store","userReducer","contacts","contactReducer","filter","filterReducer","navigate","handleAddContact","find","contact","name","alert","newContact","phone","number","filterer","evt","target","value","removeContact","id","localStorage","getItem"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport Header from \"./views/Header/HeaderView\";\nimport LoginView from \"./views/LoginView/LoginView\";\nimport RegisterView from \"./views/RegisterView/RegisterView\";\nimport HomeView from \"./views/HomeView/HomeView\";\n\nimport {\n  getContactsFromServer,\n  filterContacts,\n  removeContactsFromServer,\n  addContactToServer,\n  refreshUserAction,\n} from \"./redux/actions\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const user = useSelector((store) => {\n    return store.userReducer;\n  });\n  const contacts = useSelector((store) => {\n    return store.contactReducer;\n  });\n  const filter = useSelector((store) => {\n    return store.filterReducer;\n  });\n  const navigate = useNavigate();\n\n  function handleAddContact() {\n    if (\n      contacts[0].find((contact) => {\n        return contact.name === name;\n      })\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        name: name,\n        phone: number,\n      };\n      dispatch(addContactToServer(newContact));\n    }\n  }\n\n  function filterer(evt) {\n    dispatch(filterContacts(evt.target.value));\n  }\n\n  function removeContact(evt) {\n    const id = evt.target.id;\n    dispatch(removeContactsFromServer(id));\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\")) {\n      dispatch(refreshUserAction(localStorage.getItem(\"auth\")));\n    }\n    dispatch(getContactsFromServer(localStorage.getItem(\"auth\")));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"goit-react-hw-07-phonebook/\"\n            exact\n            element={<HomeView />}\n          />\n          <Route\n            path=\"goit-react-hw-07-phonebook/login\"\n            exact\n            element={<LoginView />}\n          />\n          <Route\n            path=\"goit-react-hw-07-phonebook/register\"\n            exact\n            element={<RegisterView />}\n          />\n        </Routes>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}