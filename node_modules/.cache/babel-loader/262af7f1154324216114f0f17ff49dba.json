{"ast":null,"code":"import { createAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { registerFetch, loginFetch, getContactsFetch, removeContactsFetch, addContactFetch } from \"../api/fetches\";\nexport const register = createAsyncThunk(\"auth/register\", async data => {\n  const user = await registerFetch(data);\n  return user;\n});\nexport const loginAction = createAsyncThunk(\"auth/login\", async data => {\n  const user = await loginFetch(data);\n  console.log(user);\n  localStorage.setItem(\"auth\", user.token);\n  return user;\n});\nexport const getContactsFromServer = createAsyncThunk(\"contacts/get\", async () => {\n  const contacts = getContactsFetch();\n  return contacts;\n});\nexport const removeContactsFromServer = createAsyncThunk(\"contacts/delete\", async id => {\n  await removeContactsFetch(id);\n  const newContact = await getContactsFetch();\n  return newContact;\n});\nexport const addContactToServer = createAsyncThunk(\"contact/add\", async contact => {\n  await addContactFetch(contact);\n  const upgradedContact = await getContactsFetch();\n  return upgradedContact;\n});\nexport const filterContacts = createAction(\"phonebook/filter\", value => {\n  return {\n    payload: value\n  };\n});","map":{"version":3,"sources":["C:/Projects/Go-it/goit-react-hw-08-phonebook/src/redux/actions.js"],"names":["createAction","createAsyncThunk","registerFetch","loginFetch","getContactsFetch","removeContactsFetch","addContactFetch","register","data","user","loginAction","console","log","localStorage","setItem","token","getContactsFromServer","contacts","removeContactsFromServer","id","newContact","addContactToServer","contact","upgradedContact","filterContacts","value","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,kBAA/C;AACA,SACEC,aADF,EAEEC,UAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,eALF,QAMO,gBANP;AAQA,OAAO,MAAMC,QAAQ,GAAGN,gBAAgB,CAAC,eAAD,EAAkB,MAAOO,IAAP,IAAgB;AACxE,QAAMC,IAAI,GAAG,MAAMP,aAAa,CAACM,IAAD,CAAhC;AACA,SAAOC,IAAP;AACD,CAHuC,CAAjC;AAKP,OAAO,MAAMC,WAAW,GAAGT,gBAAgB,CAAC,YAAD,EAAe,MAAOO,IAAP,IAAgB;AACxE,QAAMC,IAAI,GAAG,MAAMN,UAAU,CAACK,IAAD,CAA7B;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACM,KAAlC;AACA,SAAON,IAAP;AACD,CAN0C,CAApC;AAQP,OAAO,MAAMO,qBAAqB,GAAGf,gBAAgB,CACnD,cADmD,EAEnD,YAAY;AACV,QAAMgB,QAAQ,GAAGb,gBAAgB,EAAjC;AACA,SAAOa,QAAP;AACD,CALkD,CAA9C;AAQP,OAAO,MAAMC,wBAAwB,GAAGjB,gBAAgB,CACtD,iBADsD,EAEtD,MAAOkB,EAAP,IAAc;AACZ,QAAMd,mBAAmB,CAACc,EAAD,CAAzB;AAEA,QAAMC,UAAU,GAAG,MAAMhB,gBAAgB,EAAzC;AACA,SAAOgB,UAAP;AACD,CAPqD,CAAjD;AAUP,OAAO,MAAMC,kBAAkB,GAAGpB,gBAAgB,CAChD,aADgD,EAEhD,MAAOqB,OAAP,IAAmB;AACjB,QAAMhB,eAAe,CAACgB,OAAD,CAArB;AAEA,QAAMC,eAAe,GAAG,MAAMnB,gBAAgB,EAA9C;AACA,SAAOmB,eAAP;AACD,CAP+C,CAA3C;AAUP,OAAO,MAAMC,cAAc,GAAGxB,YAAY,CAAC,kBAAD,EAAsByB,KAAD,IAAW;AACxE,SAAO;AAAEC,IAAAA,OAAO,EAAED;AAAX,GAAP;AACD,CAFyC,CAAnC","sourcesContent":["import { createAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {\n  registerFetch,\n  loginFetch,\n  getContactsFetch,\n  removeContactsFetch,\n  addContactFetch,\n} from \"../api/fetches\";\n\nexport const register = createAsyncThunk(\"auth/register\", async (data) => {\n  const user = await registerFetch(data);\n  return user;\n});\n\nexport const loginAction = createAsyncThunk(\"auth/login\", async (data) => {\n  const user = await loginFetch(data);\n\n  console.log(user);\n  localStorage.setItem(\"auth\", user.token);\n  return user;\n});\n\nexport const getContactsFromServer = createAsyncThunk(\n  \"contacts/get\",\n  async () => {\n    const contacts = getContactsFetch();\n    return contacts;\n  }\n);\n\nexport const removeContactsFromServer = createAsyncThunk(\n  \"contacts/delete\",\n  async (id) => {\n    await removeContactsFetch(id);\n\n    const newContact = await getContactsFetch();\n    return newContact;\n  }\n);\n\nexport const addContactToServer = createAsyncThunk(\n  \"contact/add\",\n  async (contact) => {\n    await addContactFetch(contact);\n\n    const upgradedContact = await getContactsFetch();\n    return upgradedContact;\n  }\n);\n\nexport const filterContacts = createAction(\"phonebook/filter\", (value) => {\n  return { payload: value };\n});\n"]},"metadata":{},"sourceType":"module"}