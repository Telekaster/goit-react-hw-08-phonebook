{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Go-it\\\\goit-react-hw-08-phonebook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm/ContactForm \";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Header from \"./views/Header/HeaderView\";\nimport LoginView from \"./views/LoginView/LoginView\";\nimport RegisterView from \"./views/RegisterView/RegisterView\";\nimport { getContactsFromServer, filterContacts, removeContactsFromServer, addContactToServer, getTokenFromLocalStorage } from \"./redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [name, setName] = useState();\n  const [number, setNumber] = useState();\n  const dispatch = useDispatch();\n  const contacts = useSelector(store => {\n    return store.contactReducer;\n  });\n  const filter = useSelector(store => {\n    return store.filterReducer;\n  });\n\n  function handleChange(evt) {\n    switch (evt.target.name) {\n      case \"name\":\n        setName(evt.target.value);\n        break;\n\n      case \"tel\":\n        setNumber(evt.target.value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleAddContact() {\n    if (contacts[0].find(contact => {\n      return contact.name === name;\n    })) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        name: name,\n        phone: number\n      };\n      dispatch(addContactToServer(newContact));\n    }\n  }\n\n  function filterer(evt) {\n    dispatch(filterContacts(evt.target.value));\n  }\n\n  function removeContact(evt) {\n    const id = evt.target.id;\n    dispatch(removeContactsFromServer(id));\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\")) {\n      console.log(true);\n      console.log(localStorage.getItem(\"auth\"));\n      dispatch(getTokenFromLocalStorage(localStorage.getItem(\"auth\")));\n    }\n\n    dispatch(getContactsFromServer());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(LoginView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(RegisterView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"gF7OX3byBTBRmCaWV0EWS8Wbkzc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Projects/Go-it/goit-react-hw-08-phonebook/src/App.js"],"names":["useState","useEffect","useDispatch","useSelector","ContactForm","Filter","ContactList","BrowserRouter","Route","Routes","Header","LoginView","RegisterView","getContactsFromServer","filterContacts","removeContactsFromServer","addContactToServer","getTokenFromLocalStorage","App","name","setName","number","setNumber","dispatch","contacts","store","contactReducer","filter","filterReducer","handleChange","evt","target","value","handleAddContact","find","contact","alert","newContact","phone","filterer","removeContact","id","localStorage","getItem","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AAEA,SACEC,qBADF,EAEEC,cAFF,EAGEC,wBAHF,EAIEC,kBAJF,EAKEC,wBALF,QAMO,iBANP;;;AAQA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,EAAhC;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,EAApC;AACA,QAAMuB,QAAQ,GAAGrB,WAAW,EAA5B;AAEA,QAAMsB,QAAQ,GAAGrB,WAAW,CAAEsB,KAAD,IAAW;AACtC,WAAOA,KAAK,CAACC,cAAb;AACD,GAF2B,CAA5B;AAIA,QAAMC,MAAM,GAAGxB,WAAW,CAAEsB,KAAD,IAAW;AACpC,WAAOA,KAAK,CAACG,aAAb;AACD,GAFyB,CAA1B;;AAIA,WAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,YAAQA,GAAG,CAACC,MAAJ,CAAWZ,IAAnB;AACE,WAAK,MAAL;AACEC,QAAAA,OAAO,CAACU,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAP;AACA;;AAEF,WAAK,KAAL;AACEV,QAAAA,SAAS,CAACQ,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAT;AACA;;AAEF;AACE;AAVJ;AAYD;;AAED,WAASC,gBAAT,GAA4B;AAC1B,QACET,QAAQ,CAAC,CAAD,CAAR,CAAYU,IAAZ,CAAkBC,OAAD,IAAa;AAC5B,aAAOA,OAAO,CAAChB,IAAR,KAAiBA,IAAxB;AACD,KAFD,CADF,EAIE;AACAiB,MAAAA,KAAK,CAAE,GAAEjB,IAAK,yBAAT,CAAL;AACD,KAND,MAMO;AACL,YAAMkB,UAAU,GAAG;AACjBlB,QAAAA,IAAI,EAAEA,IADW;AAEjBmB,QAAAA,KAAK,EAAEjB;AAFU,OAAnB;AAIAE,MAAAA,QAAQ,CAACP,kBAAkB,CAACqB,UAAD,CAAnB,CAAR;AACD;AACF;;AAED,WAASE,QAAT,CAAkBT,GAAlB,EAAuB;AACrBP,IAAAA,QAAQ,CAACT,cAAc,CAACgB,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAf,CAAR;AACD;;AAED,WAASQ,aAAT,CAAuBV,GAAvB,EAA4B;AAC1B,UAAMW,EAAE,GAAGX,GAAG,CAACC,MAAJ,CAAWU,EAAtB;AACAlB,IAAAA,QAAQ,CAACR,wBAAwB,CAAC0B,EAAD,CAAzB,CAAR;AACD;;AAEDxC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAZ;AACApB,MAAAA,QAAQ,CAACN,wBAAwB,CAACyB,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAAzB,CAAR;AACD;;AACDpB,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AACD,GAPQ,EAON,CAACU,QAAD,CAPM,CAAT;AASA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCAME,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,MAA1B;AAA2B,UAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,KAAK,MAA7B;AAA8B,UAAA,OAAO,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAyBD;;GAvFuBL,G;UAGLhB,W,EAEAC,W,EAIFA,W;;;KATOe,G","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm/ContactForm \";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Header from \"./views/Header/HeaderView\";\nimport LoginView from \"./views/LoginView/LoginView\";\nimport RegisterView from \"./views/RegisterView/RegisterView\";\n\nimport {\n  getContactsFromServer,\n  filterContacts,\n  removeContactsFromServer,\n  addContactToServer,\n  getTokenFromLocalStorage,\n} from \"./redux/actions\";\n\nexport default function App() {\n  const [name, setName] = useState();\n  const [number, setNumber] = useState();\n  const dispatch = useDispatch();\n\n  const contacts = useSelector((store) => {\n    return store.contactReducer;\n  });\n\n  const filter = useSelector((store) => {\n    return store.filterReducer;\n  });\n\n  function handleChange(evt) {\n    switch (evt.target.name) {\n      case \"name\":\n        setName(evt.target.value);\n        break;\n\n      case \"tel\":\n        setNumber(evt.target.value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleAddContact() {\n    if (\n      contacts[0].find((contact) => {\n        return contact.name === name;\n      })\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        name: name,\n        phone: number,\n      };\n      dispatch(addContactToServer(newContact));\n    }\n  }\n\n  function filterer(evt) {\n    dispatch(filterContacts(evt.target.value));\n  }\n\n  function removeContact(evt) {\n    const id = evt.target.id;\n    dispatch(removeContactsFromServer(id));\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\")) {\n      console.log(true);\n      console.log(localStorage.getItem(\"auth\"));\n      dispatch(getTokenFromLocalStorage(localStorage.getItem(\"auth\")));\n    }\n    dispatch(getContactsFromServer());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Routes>\n          {/* <Route\n            path=\"/\"\n            exact\n            element={}\n          /> */}\n          <Route path=\"/login\" exact element={<LoginView />} />\n          <Route path=\"/register\" exact element={<RegisterView />} />\n          {/* \n          <ContactForm\n            handleChange={handleChange}\n            handleAddContact={handleAddContact}\n          /> */}\n\n          {/* <h2>Contacts</h2>\n          <Filter filterContacts={filterer} />\n          <ContactList filter={filter} deleteContact={removeContact} /> */}\n        </Routes>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}