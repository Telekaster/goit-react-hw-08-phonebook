{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Go-it\\\\goit-react-hw-08-phonebook\\\\src\\\\views\\\\LoginView\\\\LoginView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./LoginView.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginAction } from \"../../redux/actions\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { $CombinedState } from \"@reduxjs/toolkit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginView() {\n  _s();\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  function handleChange(evt) {\n    const {\n      name,\n      value\n    } = evt.target;\n\n    switch (name) {\n      case \"email\":\n        setEmail(value);\n        break;\n\n      case \"password\":\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  async function handleSubmit() {\n    dispatch(loginAction({\n      email,\n      password\n    }));\n    setEmail(\"\");\n    setPassword(\"\");\n    navigate(\"\");\n  }\n\n  if (location.pathname === \"/login\" && localStorage.getItem(\"auth\")) {\n    navigate(\"/\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.title,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"E-mail\",\n        className: styles.input,\n        name: \"email\",\n        value: email,\n        onInput: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        className: styles.input,\n        name: \"password\",\n        value: password,\n        onInput: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.button,\n        onClick: handleSubmit,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginView, \"dEGDikGYfHGK6vnZ1HH0t5/6QJk=\", false, function () {\n  return [useDispatch, useNavigate, useLocation];\n});\n\n_c = LoginView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginView\");","map":{"version":3,"sources":["C:/Projects/Go-it/goit-react-hw-08-phonebook/src/views/LoginView/LoginView.jsx"],"names":["React","useState","styles","useDispatch","useSelector","loginAction","useNavigate","useLocation","$CombinedState","LoginView","email","setEmail","password","setPassword","dispatch","navigate","location","handleChange","evt","name","value","target","handleSubmit","pathname","localStorage","getItem","title","form","input","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,EAAxC;AACA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,WAASU,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,GAAG,CAACG,MAA5B;;AACA,YAAQF,IAAR;AACE,WAAK,OAAL;AACER,QAAAA,QAAQ,CAACS,KAAD,CAAR;AACA;;AAEF,WAAK,UAAL;AACEP,QAAAA,WAAW,CAACO,KAAD,CAAX;AACA;;AAEF;AACE;AAVJ;AAYD;;AAED,iBAAeE,YAAf,GAA8B;AAC5BR,IAAAA,QAAQ,CAACT,WAAW,CAAC;AAAEK,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAD,CAAZ,CAAR;AACAD,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;;AAED,MAAIC,QAAQ,CAACO,QAAT,KAAsB,QAAtB,IAAkCC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAtC,EAAoE;AAClEV,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;;AAED,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEb,MAAM,CAACwB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAM,MAAA,SAAS,EAAExB,MAAM,CAACyB,IAAxB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,QAFd;AAGE,QAAA,SAAS,EAAEzB,MAAM,CAAC0B,KAHpB;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,KAAK,EAAElB,KALT;AAME,QAAA,OAAO,EAAEO;AANX;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,SAAS,EAAEf,MAAM,CAAC0B,KAHpB;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,KAAK,EAAEhB,QALT;AAME,QAAA,OAAO,EAAEK;AANX;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAEf,MAAM,CAAC2B,MAAxC;AAAgD,QAAA,OAAO,EAAEP,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA7DuBb,S;UAGLN,W,EACAG,W,EACAC,W;;;KALKE,S","sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./LoginView.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginAction } from \"../../redux/actions\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { $CombinedState } from \"@reduxjs/toolkit\";\r\n\r\nexport default function LoginView() {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    switch (name) {\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  async function handleSubmit() {\r\n    dispatch(loginAction({ email, password }));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    navigate(\"\");\r\n  }\r\n\r\n  if (location.pathname === \"/login\" && localStorage.getItem(\"auth\")) {\r\n    navigate(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className={styles.title}>Login</h3>\r\n\r\n      <form className={styles.form}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"E-mail\"\r\n          className={styles.input}\r\n          name=\"email\"\r\n          value={email}\r\n          onInput={handleChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className={styles.input}\r\n          name=\"password\"\r\n          value={password}\r\n          onInput={handleChange}\r\n        />\r\n        <button type=\"button\" className={styles.button} onClick={handleSubmit}>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}