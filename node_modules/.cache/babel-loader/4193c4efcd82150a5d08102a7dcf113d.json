{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { register, loginAction, getTokenFromLocalStorage, filterContacts, addContactToServer, getContactsFromServer, removeContactsFromServer } from \"./actions\";\nconst userReducer = createReducer(null, {\n  [register.fulfilled]: (state, _ref) => {\n    let {\n      payload\n    } = _ref;\n    return state = payload;\n  },\n  [loginAction.fulfilled]: (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    return state = payload;\n  }\n});\nconst contactReducer = createReducer([], {\n  [getContactsFromServer.fulfilled]: (state, _ref3) => {\n    let {\n      payload\n    } = _ref3;\n    return [...state, payload];\n  },\n  [removeContactsFromServer.fulfilled]: (state, _ref4) => {\n    let {\n      payload\n    } = _ref4;\n    return [state = payload];\n  },\n  [addContactToServer.fulfilled]: (state, _ref5) => {\n    let {\n      payload\n    } = _ref5;\n    return [state = payload];\n  }\n});\nconst loadingReducer = createReducer(true, {\n  [register.pending]: () => true,\n  [register.fulfilled]: () => false,\n  [register.rejected]: () => false,\n  [loginAction.fulfilled]: () => true,\n  [loginAction.fulfilled]: () => false,\n  [loginAction.fulfilled]: () => false,\n  [getContactsFromServer.pending]: () => true,\n  [getContactsFromServer.fulfilled]: () => false,\n  [getContactsFromServer.rejected]: () => false,\n  [removeContactsFromServer.pending]: () => true,\n  [removeContactsFromServer.fulfilled]: () => false,\n  [removeContactsFromServer.rejected]: () => false\n});\nconst filterReducer = createReducer(\"\", {\n  [filterContacts]: (state, _ref6) => {\n    let {\n      payload\n    } = _ref6;\n    return state = payload;\n  }\n});\nexport const reducers = combineReducers({\n  userReducer,\n  contactReducer,\n  filterReducer,\n  loadingReducer\n});","map":{"version":3,"sources":["C:/Projects/Go-it/goit-react-hw-08-phonebook/src/redux/reducers.js"],"names":["combineReducers","createReducer","register","loginAction","getTokenFromLocalStorage","filterContacts","addContactToServer","getContactsFromServer","removeContactsFromServer","userReducer","fulfilled","state","payload","contactReducer","loadingReducer","pending","rejected","filterReducer","reducers"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,wBAHF,EAIEC,cAJF,EAKEC,kBALF,EAMEC,qBANF,EAOEC,wBAPF,QAQO,WARP;AAUA,MAAMC,WAAW,GAAGR,aAAa,CAAC,IAAD,EAAO;AACtC,GAACC,QAAQ,CAACQ,SAAV,GAAsB,CAACC,KAAD;AAAA,QAAQ;AAAEC,MAAAA;AAAF,KAAR;AAAA,WAAyBD,KAAK,GAAGC,OAAjC;AAAA,GADgB;AAEtC,GAACT,WAAW,CAACO,SAAb,GAAyB,CAACC,KAAD;AAAA,QAAQ;AAAEC,MAAAA;AAAF,KAAR;AAAA,WAAyBD,KAAK,GAAGC,OAAjC;AAAA;AAFa,CAAP,CAAjC;AAKA,MAAMC,cAAc,GAAGZ,aAAa,CAAC,EAAD,EAAK;AACvC,GAACM,qBAAqB,CAACG,SAAvB,GAAmC,CAACC,KAAD;AAAA,QAAQ;AAAEC,MAAAA;AAAF,KAAR;AAAA,WAAwB,CACzD,GAAGD,KADsD,EAEzDC,OAFyD,CAAxB;AAAA,GADI;AAKvC,GAACJ,wBAAwB,CAACE,SAA1B,GAAsC,CAACC,KAAD;AAAA,QAAQ;AAAEC,MAAAA;AAAF,KAAR;AAAA,WAAwB,CAC3DD,KAAK,GAAGC,OADmD,CAAxB;AAAA,GALC;AASvC,GAACN,kBAAkB,CAACI,SAApB,GAAgC,CAACC,KAAD;AAAA,QAAQ;AAAEC,MAAAA;AAAF,KAAR;AAAA,WAAwB,CAAED,KAAK,GAAGC,OAAV,CAAxB;AAAA;AATO,CAAL,CAApC;AAYA,MAAME,cAAc,GAAGb,aAAa,CAAC,IAAD,EAAO;AACzC,GAACC,QAAQ,CAACa,OAAV,GAAoB,MAAM,IADe;AAEzC,GAACb,QAAQ,CAACQ,SAAV,GAAsB,MAAM,KAFa;AAGzC,GAACR,QAAQ,CAACc,QAAV,GAAqB,MAAM,KAHc;AAIzC,GAACb,WAAW,CAACO,SAAb,GAAyB,MAAM,IAJU;AAKzC,GAACP,WAAW,CAACO,SAAb,GAAyB,MAAM,KALU;AAMzC,GAACP,WAAW,CAACO,SAAb,GAAyB,MAAM,KANU;AAOzC,GAACH,qBAAqB,CAACQ,OAAvB,GAAiC,MAAM,IAPE;AAQzC,GAACR,qBAAqB,CAACG,SAAvB,GAAmC,MAAM,KARA;AASzC,GAACH,qBAAqB,CAACS,QAAvB,GAAkC,MAAM,KATC;AAUzC,GAACR,wBAAwB,CAACO,OAA1B,GAAoC,MAAM,IAVD;AAWzC,GAACP,wBAAwB,CAACE,SAA1B,GAAsC,MAAM,KAXH;AAYzC,GAACF,wBAAwB,CAACQ,QAA1B,GAAqC,MAAM;AAZF,CAAP,CAApC;AAeA,MAAMC,aAAa,GAAGhB,aAAa,CAAC,EAAD,EAAK;AACtC,GAACI,cAAD,GAAkB,CAACM,KAAD,YAAwB;AAAA,QAAhB;AAAEC,MAAAA;AAAF,KAAgB;AACxC,WAAQD,KAAK,GAAGC,OAAhB;AACD;AAHqC,CAAL,CAAnC;AAMA,OAAO,MAAMM,QAAQ,GAAGlB,eAAe,CAAC;AACtCS,EAAAA,WADsC;AAEtCI,EAAAA,cAFsC;AAGtCI,EAAAA,aAHsC;AAItCH,EAAAA;AAJsC,CAAD,CAAhC","sourcesContent":["import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  register,\n  loginAction,\n  getTokenFromLocalStorage,\n  filterContacts,\n  addContactToServer,\n  getContactsFromServer,\n  removeContactsFromServer,\n} from \"./actions\";\n\nconst userReducer = createReducer(null, {\n  [register.fulfilled]: (state, { payload }) => (state = payload),\n  [loginAction.fulfilled]: (state, { payload }) => (state = payload),\n});\n\nconst contactReducer = createReducer([], {\n  [getContactsFromServer.fulfilled]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [removeContactsFromServer.fulfilled]: (state, { payload }) => [\n    (state = payload),\n  ],\n\n  [addContactToServer.fulfilled]: (state, { payload }) => [(state = payload)],\n});\n\nconst loadingReducer = createReducer(true, {\n  [register.pending]: () => true,\n  [register.fulfilled]: () => false,\n  [register.rejected]: () => false,\n  [loginAction.fulfilled]: () => true,\n  [loginAction.fulfilled]: () => false,\n  [loginAction.fulfilled]: () => false,\n  [getContactsFromServer.pending]: () => true,\n  [getContactsFromServer.fulfilled]: () => false,\n  [getContactsFromServer.rejected]: () => false,\n  [removeContactsFromServer.pending]: () => true,\n  [removeContactsFromServer.fulfilled]: () => false,\n  [removeContactsFromServer.rejected]: () => false,\n});\n\nconst filterReducer = createReducer(\"\", {\n  [filterContacts]: (state, { payload }) => {\n    return (state = payload);\n  },\n});\n\nexport const reducers = combineReducers({\n  userReducer,\n  contactReducer,\n  filterReducer,\n  loadingReducer,\n});\n"]},"metadata":{},"sourceType":"module"}