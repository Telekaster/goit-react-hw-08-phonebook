{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Go-it\\\\goit-react-hw-08-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport { useState, useSelector } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getContactsFromServer, filterContacts, removeContactsFromServer, addContactToServer, refreshUserAction } from \"../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactForm(_ref) {\n  _s();\n\n  var _this = this;\n\n  let {\n    handleChange,\n    handleAddContact\n  } = _ref;\n  return function (handleChange) {\n    const [name, setName] = useState();\n    const [number, setNumber] = useState();\n    const dispatch = useDispatch(); // const contacts = useSelector((store) => {\n    //   console.log(store);\n    // return store;\n    // });\n\n    function handleChange(evt) {\n      switch (evt.target.name) {\n        case \"name\":\n          setName(evt.target.value);\n          break;\n\n        case \"tel\":\n          setNumber(evt.target.value);\n          break;\n\n        default:\n          break;\n      }\n    } // function handleAddContact() {\n    //   if (\n    //     contacts[0].find((contact) => {\n    //       return contact.name === name;\n    //     })\n    //   ) {\n    //     alert(`${name} is already in contacts`);\n    //   } else {\n    //     const newContact = {\n    //       name: name,\n    //       phone: number,\n    //     };\n    //     dispatch(addContactToServer(newContact));\n    //   }\n    // }\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.input__area,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.name,\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n        required: true,\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.name,\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"tel\",\n        onChange: handleChange,\n        value: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.input__btn,\n        onClick: handleAddContact,\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, _this);\n  }(handleChange);\n}\n\n_s(ContactForm, \"iWtC8PhXEtDy71L6cDn6aH+tMfY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Projects/Go-it/goit-react-hw-08-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["React","styles","useState","useSelector","useDispatch","getContactsFromServer","filterContacts","removeContactsFromServer","addContactToServer","refreshUserAction","ContactForm","handleChange","handleAddContact","name","setName","number","setNumber","dispatch","evt","target","value","input__area","input__btn"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACEC,qBADF,EAEEC,cAFF,EAGEC,wBAHF,EAIEC,kBAJF,EAKEC,iBALF,QAMO,qBANP;;AAQA,eAAe,SAASC,WAAT;AAAA;;AAAA;;AAAA,MAAqB;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAArB;AAAA,iCAAyD;AACtE,UAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,EAAhC;AACA,UAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,EAApC;AACA,UAAMe,QAAQ,GAAGb,WAAW,EAA5B,CAHsE,CAKtE;AACA;AACA;AACA;;AAEA,aAASO,YAAT,CAAsBO,GAAtB,EAA2B;AACzB,cAAQA,GAAG,CAACC,MAAJ,CAAWN,IAAnB;AACE,aAAK,MAAL;AACEC,UAAAA,OAAO,CAACI,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAP;AACA;;AAEF,aAAK,KAAL;AACEJ,UAAAA,SAAS,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAT;AACA;;AAEF;AACE;AAVJ;AAYD,KAvBqE,CAyBtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,wBACE;AAAK,MAAA,SAAS,EAAEnB,MAAM,CAACoB,WAAvB;AAAA,8BACE;AAAG,QAAA,SAAS,EAAEpB,MAAM,CAACY,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,QAAA,QAAQ,EAAEF,YADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,OAAO,EAAC,wHAJV;AAKE,QAAA,KAAK,EAAC,icALR;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,KAAK,EAAEE;AAPT;AAAA;AAAA;AAAA;AAAA,eAFF,eAWE;AAAG,QAAA,SAAS,EAAEZ,MAAM,CAACY,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXF,eAYE;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,IAAI,EAAC,KAAvB;AAA6B,QAAA,QAAQ,EAAEF,YAAvC;AAAqD,QAAA,KAAK,EAAEI;AAA5D;AAAA;AAAA;AAAA;AAAA,eAZF,eAcE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAEd,MAAM,CAACqB,UAFpB;AAGE,QAAA,OAAO,EAAEV,gBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAwBD,GAjEc;AAAA;;GAASF,W;UAGLN,W;;;KAHKM,W","sourcesContent":["import React from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport { useState, useSelector } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getContactsFromServer,\n  filterContacts,\n  removeContactsFromServer,\n  addContactToServer,\n  refreshUserAction,\n} from \"../../redux/actions\";\n\nexport default function ContactForm({ handleChange, handleAddContact }) {\n  const [name, setName] = useState();\n  const [number, setNumber] = useState();\n  const dispatch = useDispatch();\n\n  // const contacts = useSelector((store) => {\n  //   console.log(store);\n  // return store;\n  // });\n\n  function handleChange(evt) {\n    switch (evt.target.name) {\n      case \"name\":\n        setName(evt.target.value);\n        break;\n\n      case \"tel\":\n        setNumber(evt.target.value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  // function handleAddContact() {\n  //   if (\n  //     contacts[0].find((contact) => {\n  //       return contact.name === name;\n  //     })\n  //   ) {\n  //     alert(`${name} is already in contacts`);\n  //   } else {\n  //     const newContact = {\n  //       name: name,\n  //       phone: number,\n  //     };\n  //     dispatch(addContactToServer(newContact));\n  //   }\n  // }\n\n  return (\n    <div className={styles.input__area}>\n      <p className={styles.name}>Name</p>\n      <input\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n      />\n      <p className={styles.name}>Phone</p>\n      <input type=\"tel\" name=\"tel\" onChange={handleChange} value={number} />\n\n      <button\n        type=\"button\"\n        className={styles.input__btn}\n        onClick={handleAddContact}\n      >\n        Add contact\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}