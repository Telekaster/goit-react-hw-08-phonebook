{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Go-it\\\\goit-react-hw-08-phonebook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm/ContactForm \";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport { Route, Routes, Redirect, useNavigate } from \"react-router-dom\";\nimport Header from \"./views/Header/HeaderView\";\nimport LoginView from \"./views/LoginView/LoginView\";\nimport RegisterView from \"./views/RegisterView/RegisterView\";\nimport HomeView from \"./views/HomeView/HomeView\";\nimport { getContactsFromServer, filterContacts, removeContactsFromServer, addContactToServer, refreshUserAction } from \"./redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [name, setName] = useState();\n  const [number, setNumber] = useState();\n  const dispatch = useDispatch();\n  const user = useSelector(store => {\n    return store.userReducer;\n  });\n  const contacts = useSelector(store => {\n    return store.contactReducer;\n  });\n  const filter = useSelector(store => {\n    return store.filterReducer;\n  });\n  const navigate = useNavigate();\n  const homeUrl = \"goit-react-hw-07-phonebook/\";\n\n  function handleChange(evt) {\n    switch (evt.target.name) {\n      case \"name\":\n        setName(evt.target.value);\n        break;\n\n      case \"tel\":\n        setNumber(evt.target.value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleAddContact() {\n    if (contacts[0].find(contact => {\n      return contact.name === name;\n    })) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        name: name,\n        phone: number\n      };\n      dispatch(addContactToServer(newContact));\n    }\n  }\n\n  function filterer(evt) {\n    dispatch(filterContacts(evt.target.value));\n  }\n\n  function removeContact(evt) {\n    const id = evt.target.id;\n    dispatch(removeContactsFromServer(id));\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\")) {\n      dispatch(refreshUserAction(localStorage.getItem(\"auth\")));\n    }\n\n    dispatch(getContactsFromServer());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: homeUrl,\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(HomeView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `${homeUrl}login`,\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(LoginView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"goit-react-hw-07-phonebook/register\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(RegisterView, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"MQmh+jJII/8y9sgqbNhVdbMqVkY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useNavigate];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Projects/Go-it/goit-react-hw-08-phonebook/src/App.js"],"names":["useState","useEffect","useDispatch","useSelector","ContactForm","Filter","ContactList","Route","Routes","Redirect","useNavigate","Header","LoginView","RegisterView","HomeView","getContactsFromServer","filterContacts","removeContactsFromServer","addContactToServer","refreshUserAction","App","name","setName","number","setNumber","dispatch","user","store","userReducer","contacts","contactReducer","filter","filterReducer","navigate","homeUrl","handleChange","evt","target","value","handleAddContact","find","contact","alert","newContact","phone","filterer","removeContact","id","localStorage","getItem"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm/ContactForm \";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport { Route, Routes, Redirect, useNavigate } from \"react-router-dom\";\nimport Header from \"./views/Header/HeaderView\";\nimport LoginView from \"./views/LoginView/LoginView\";\nimport RegisterView from \"./views/RegisterView/RegisterView\";\nimport HomeView from \"./views/HomeView/HomeView\";\n\nimport {\n  getContactsFromServer,\n  filterContacts,\n  removeContactsFromServer,\n  addContactToServer,\n  refreshUserAction,\n} from \"./redux/actions\";\n\nexport default function App() {\n  const [name, setName] = useState();\n  const [number, setNumber] = useState();\n  const dispatch = useDispatch();\n  const user = useSelector((store) => {\n    return store.userReducer;\n  });\n  const contacts = useSelector((store) => {\n    return store.contactReducer;\n  });\n  const filter = useSelector((store) => {\n    return store.filterReducer;\n  });\n  const navigate = useNavigate();\n  const homeUrl = \"goit-react-hw-07-phonebook/\";\n\n  function handleChange(evt) {\n    switch (evt.target.name) {\n      case \"name\":\n        setName(evt.target.value);\n        break;\n\n      case \"tel\":\n        setNumber(evt.target.value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleAddContact() {\n    if (\n      contacts[0].find((contact) => {\n        return contact.name === name;\n      })\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        name: name,\n        phone: number,\n      };\n      dispatch(addContactToServer(newContact));\n    }\n  }\n\n  function filterer(evt) {\n    dispatch(filterContacts(evt.target.value));\n  }\n\n  function removeContact(evt) {\n    const id = evt.target.id;\n    dispatch(removeContactsFromServer(id));\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\")) {\n      dispatch(refreshUserAction(localStorage.getItem(\"auth\")));\n    }\n    dispatch(getContactsFromServer());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Routes>\n          <Route path={homeUrl} exact element={<HomeView />} />\n          <Route path={`${homeUrl}login`} exact element={<LoginView />} />\n          <Route\n            path=\"goit-react-hw-07-phonebook/register\"\n            exact\n            element={<RegisterView />}\n          />\n\n          {/* \n          <ContactForm\n            handleChange={handleChange}\n            handleAddContact={handleAddContact}\n          /> */}\n          {/* <h2>Contacts</h2>\n          <Filter filterContacts={filterer} />\n          <ContactList filter={filter} deleteContact={removeContact} /> */}\n        </Routes>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}