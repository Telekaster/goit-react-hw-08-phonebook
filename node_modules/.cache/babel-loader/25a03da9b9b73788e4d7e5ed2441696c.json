{"ast":null,"code":"const BASE_URL = \"https://connections-api.herokuapp.com\";\nexport async function registerFetch(data) {\n  const respose = await fetch(`${BASE_URL}/users/signup`, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(data => {\n    return data.json();\n  });\n  console.log(JSON.stringify(data));\n  return respose;\n}\nexport async function getContactsFetch() {\n  const response = await fetch(BASE_URL).then(response => {\n    return response.json();\n  });\n  return response;\n}\nexport async function removeContactsFetch(id) {\n  const response = await fetch(`${BASE_URL}/${id}`, {\n    method: \"DELETE\",\n    body: JSON.stringify(id)\n  }).then(response => {\n    return response.json();\n  }).then(data => {\n    return data;\n  });\n  return response;\n}\nexport async function addContactFetch(contact) {\n  const response = await fetch(`${BASE_URL}`, {\n    method: \"POST\",\n    body: JSON.stringify(contact),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\"\n    }\n  }).then(response => {\n    return response.json();\n  }).then(data => {\n    return data;\n  });\n  return response;\n}","map":{"version":3,"sources":["C:/Projects/Go-it/goit-react-hw-08-phonebook/src/api/fetches.js"],"names":["BASE_URL","registerFetch","data","respose","fetch","method","body","JSON","stringify","headers","then","json","console","log","getContactsFetch","response","removeContactsFetch","id","addContactFetch","contact"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uCAAjB;AAEA,OAAO,eAAeC,aAAf,CAA6BC,IAA7B,EAAmC;AACxC,QAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,eAAb,EAA6B;AACtDK,IAAAA,MAAM,EAAE,MAD8C;AAEtDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFgD;AAGtDO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAH6C,GAA7B,CAAL,CAMnBC,IANmB,CAMbR,IAAD,IAAU;AAChB,WAAOA,IAAI,CAACS,IAAL,EAAP;AACD,GARqB,CAAtB;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAZ;AACA,SAAOC,OAAP;AACD;AAED,OAAO,eAAeW,gBAAf,GAAkC;AACvC,QAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACJ,QAAD,CAAL,CAAgBU,IAAhB,CAAsBK,QAAD,IAAc;AACxD,WAAOA,QAAQ,CAACJ,IAAT,EAAP;AACD,GAFsB,CAAvB;AAIA,SAAOI,QAAP;AACD;AAED,OAAO,eAAeC,mBAAf,CAAmCC,EAAnC,EAAuC;AAC5C,QAAMF,QAAQ,GAAG,MAAMX,KAAK,CAAE,GAAEJ,QAAS,IAAGiB,EAAG,EAAnB,EAAsB;AAChDZ,IAAAA,MAAM,EAAE,QADwC;AAEhDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeS,EAAf;AAF0C,GAAtB,CAAL,CAIpBP,IAJoB,CAIdK,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACJ,IAAT,EAAP;AACD,GANoB,EAOpBD,IAPoB,CAOdR,IAAD,IAAU;AACd,WAAOA,IAAP;AACD,GAToB,CAAvB;AAWA,SAAOa,QAAP;AACD;AAED,OAAO,eAAeG,eAAf,CAA+BC,OAA/B,EAAwC;AAC7C,QAAMJ,QAAQ,GAAG,MAAMX,KAAK,CAAE,GAAEJ,QAAS,EAAb,EAAgB;AAC1CK,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,OAAf,CAFoC;AAG1CV,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHiC,GAAhB,CAAL,CAOpBC,IAPoB,CAOdK,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACJ,IAAT,EAAP;AACD,GAToB,EAUpBD,IAVoB,CAUdR,IAAD,IAAU;AACd,WAAOA,IAAP;AACD,GAZoB,CAAvB;AAcA,SAAOa,QAAP;AACD","sourcesContent":["const BASE_URL = \"https://connections-api.herokuapp.com\";\n\nexport async function registerFetch(data) {\n  const respose = await fetch(`${BASE_URL}/users/signup`, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((data) => {\n    return data.json();\n  });\n  console.log(JSON.stringify(data));\n  return respose;\n}\n\nexport async function getContactsFetch() {\n  const response = await fetch(BASE_URL).then((response) => {\n    return response.json();\n  });\n\n  return response;\n}\n\nexport async function removeContactsFetch(id) {\n  const response = await fetch(`${BASE_URL}/${id}`, {\n    method: \"DELETE\",\n    body: JSON.stringify(id),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      return data;\n    });\n\n  return response;\n}\n\nexport async function addContactFetch(contact) {\n  const response = await fetch(`${BASE_URL}`, {\n    method: \"POST\",\n    body: JSON.stringify(contact),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      return data;\n    });\n\n  return response;\n}\n"]},"metadata":{},"sourceType":"module"}